/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIUX;
import EverythingEverything.*;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author zuber
 */
public class List1 extends javax.swing.JFrame {

    DefaultTableModel tblModel;
    /**
     * Creates new form List2
     */
    public List1() {
        initComponents();
         tblModel = new DefaultTableModel();//(DefaultTableModel)jTable2.getModel();
         jTable2.setModel(tblModel);
         tblModel.addColumn("ID");
         tblModel.addColumn("First Name");
         tblModel.addColumn("Middle Name");
         tblModel.addColumn("Last Name");
         tblModel.addColumn("Sex");
         tblModel.addColumn("Grade");
         tblModel.addColumn("Section");
         tblModel.addColumn("Stream");
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("School Management System-Student's List");

        jPanel1.setBackground(new java.awt.Color(12, 69, 107));

        jButton1.setText("/");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(12, 69, 107));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Student List");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9", "10", "11", "12" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));

        jButton2.setText("Show List");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(317, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "First Name", "Middle Name", "Last Name", "Sex", "Grade", "Section", "Stream"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Byte.class, java.lang.Integer.class, java.lang.Byte.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        Main1 m1=new Main1();
        this.hide();
        m1.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if((jComboBox1.getSelectedItem().toString().equals("9"))&&jComboBox2.getSelectedItem().toString().equals("A")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 9 AND SectionID = 'A'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("9"))&&jComboBox2.getSelectedItem().toString().equals("B")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 9 AND SectionID = 'B'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("9"))&&jComboBox2.getSelectedItem().toString().equals("C")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 9 AND SectionID = 'C'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("9"))&&jComboBox2.getSelectedItem().toString().equals("D")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 9 AND SectionID = 'D'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("10"))&&jComboBox2.getSelectedItem().toString().equals("A")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 10 AND SectionID = 'A'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("10"))&&jComboBox2.getSelectedItem().toString().equals("B")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 10 AND SectionID = 'B'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("10"))&&jComboBox2.getSelectedItem().toString().equals("C")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 10 AND SectionID = 'C'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("10"))&&jComboBox2.getSelectedItem().toString().equals("D")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 10 AND SectionID = 'D'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("11"))&&jComboBox2.getSelectedItem().toString().equals("A")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 11 AND SectionID = 'A'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("11"))&&jComboBox2.getSelectedItem().toString().equals("B")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 11 AND SectionID = 'B'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("11"))&&jComboBox2.getSelectedItem().toString().equals("C")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 11 AND SectionID = 'C'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("11"))&&jComboBox2.getSelectedItem().toString().equals("D")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 11 AND SectionID = 'D'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("12"))&&jComboBox2.getSelectedItem().toString().equals("A")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 12 AND SectionID = 'A'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("12"))&&jComboBox2.getSelectedItem().toString().equals("B")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 12 AND SectionID = 'B'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("12"))&&jComboBox2.getSelectedItem().toString().equals("C")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 12 AND SectionID = 'C'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        else  if((jComboBox1.getSelectedItem().toString().equals("12"))&&jComboBox2.getSelectedItem().toString().equals("D")){
            try {
                 
            Class.forName("com.mysql.cj.jdbc.Driver");
                
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/SMDB", "root", "ePi1623Crown!");
           
            Statement  stmt = con.createStatement();
            
            String query = "SELECT * FROM Student WHERE GradeID = 12 AND SectionID = 'D'";
            ResultSet rs = stmt.executeQuery(query);
    
            
            while(rs.next()){
            String id = rs.getString("StudentID");
            String fn = rs.getString("Firstname");
            String mn = rs.getString("MiddleName");
            String ln = rs.getString("LastName");
            String sex = rs.getString("Sex");
            String grd = String.valueOf(rs.getInt("GradeID")); 
            String sec = rs.getString("SectionID");
            String strm =rs.getString("StreamID");
           Object tbdata [] = {id, fn,mn, ln, sex, grd, sec, strm};
           //JOptionPane.showMessageDialog(rootPane, id);
           
           tblModel.addRow(tbdata);
      }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(List1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        
    }//GEN-LAST:event_jButton2ActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(List1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(List1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(List1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(List1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new List1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
